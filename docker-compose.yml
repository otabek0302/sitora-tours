version: '3.8'

services:
  # Next.js Application
  app:
    image: node:22-alpine
    container_name: sitora-tour-app
    ports:
      - '3000:3000'
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
      - media:/home/node/app/media
    working_dir: /home/node/app/
    command: sh -c "corepack enable && corepack prepare pnpm@latest --activate && pnpm install && pnpm build && pnpm start"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_URI=postgresql://postgres:password@postgres:5432/sitora_tour
      - NEXT_PUBLIC_SERVER_URL=http://localhost:3000
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    networks:
      - sitora-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: sitora-tour-db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: sitora_tour
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: '-E UTF8 --locale=en_US.UTF-8'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sitora-network

  # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sitora-tour-pgadmin
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sitoratours.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - sitora-network
    profiles:
      - tools # Only start with: docker-compose --profile tools up

networks:
  sitora-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  node_modules:
    driver: local
  media:
    driver: local
  pgadmin:
    driver: local
