/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    cities: City;
    tours: Tour;
    hotels: Hotel;
    cars: Car;
    reviews: Review;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    cities: CitiesSelect<false> | CitiesSelect<true>;
    tours: ToursSelect<false> | ToursSelect<true>;
    hotels: HotelsSelect<false> | HotelsSelect<true>;
    cars: CarsSelect<false> | CarsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    pages: Page;
  };
  globalsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
  };
  locale: 'uz' | 'ru' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  first_name: string;
  last_name: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  /**
   * Auto-generated from English name
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities".
 */
export interface City {
  id: number;
  name: string;
  /**
   * Auto-generated from English name
   */
  slug: string;
  description: string;
  image?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours".
 */
export interface Tour {
  id: number;
  name: string;
  /**
   * Auto-generated from English name
   */
  slug: string;
  description: string;
  duration_days: number;
  duration_nights: number;
  price: number;
  category: number | Category;
  cities: (number | City)[];
  /**
   * Select whether this tour is within Uzbekistan (local) or abroad
   */
  tourType: 'local' | 'abroad';
  locations?:
    | {
        from: number | City;
        to: number | City;
        transport: string;
        fromTime?: string | null;
        toTime?: string | null;
        duration?: string | null;
        id?: string | null;
      }[]
    | null;
  accommodation?:
    | {
        city: number | City;
        hotel?: (number | Hotel)[] | null;
        id?: string | null;
      }[]
    | null;
  itinerary?:
    | {
        day: string;
        activities?:
          | {
              activity: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  services?: {
    included?:
      | {
          title: string;
          id?: string | null;
        }[]
      | null;
    notIncluded?:
      | {
          title: string;
          id?: string | null;
        }[]
      | null;
  };
  booking_pricing?:
    | {
        dateStart?: string | null;
        dateEnd?: string | null;
        /**
         * Number of persons for this pricing option
         */
        numberOfPersons?: number | null;
        pricePerPerson: number;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Average rating calculated from customer reviews (0-5 stars)
   */
  rating?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotels".
 */
export interface Hotel {
  id: number;
  name: string;
  /**
   * Auto-generated from English name
   */
  slug: string;
  description: string;
  city: number | City;
  address?: string | null;
  phone: string;
  /**
   * Hotel website URL (e.g., https://example.com)
   */
  website?: string | null;
  /**
   * Hotel contact email
   */
  email?: string | null;
  rating?: ('1' | '2' | '3' | '4' | '5') | null;
  features?:
    | {
        name: string;
        id?: string | null;
      }[]
    | null;
  image: number | Media;
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  policies: {
    checkIn: string;
    checkOut: string;
    cancellation?: string | null;
    pet?: string | null;
    children?: string | null;
    payment?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cars".
 */
export interface Car {
  id: number;
  name: string;
  type: string;
  /**
   * Auto-generated from English name
   */
  slug: string;
  brand: string;
  capacity: number;
  pricing: {
    pricePerDayInCity: number;
    transferAirportHotelAirport?: number | null;
    transferHotelDinnerHotel?: number | null;
    longRouteFrom7Days?: number | null;
  };
  image: number | Media;
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  /**
   * Auto-generated from first name
   */
  slug?: string | null;
  first_name: string;
  last_name?: string | null;
  comment: string;
  rating: number;
  tour: number | Tour;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'cities';
        value: number | City;
      } | null)
    | ({
        relationTo: 'tours';
        value: number | Tour;
      } | null)
    | ({
        relationTo: 'hotels';
        value: number | Hotel;
      } | null)
    | ({
        relationTo: 'cars';
        value: number | Car;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  first_name?: T;
  last_name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities_select".
 */
export interface CitiesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours_select".
 */
export interface ToursSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  duration_days?: T;
  duration_nights?: T;
  price?: T;
  category?: T;
  cities?: T;
  tourType?: T;
  locations?:
    | T
    | {
        from?: T;
        to?: T;
        transport?: T;
        fromTime?: T;
        toTime?: T;
        duration?: T;
        id?: T;
      };
  accommodation?:
    | T
    | {
        city?: T;
        hotel?: T;
        id?: T;
      };
  itinerary?:
    | T
    | {
        day?: T;
        activities?:
          | T
          | {
              activity?: T;
              id?: T;
            };
        id?: T;
      };
  services?:
    | T
    | {
        included?:
          | T
          | {
              title?: T;
              id?: T;
            };
        notIncluded?:
          | T
          | {
              title?: T;
              id?: T;
            };
      };
  booking_pricing?:
    | T
    | {
        dateStart?: T;
        dateEnd?: T;
        numberOfPersons?: T;
        pricePerPerson?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  rating?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotels_select".
 */
export interface HotelsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  city?: T;
  address?: T;
  phone?: T;
  website?: T;
  email?: T;
  rating?: T;
  features?:
    | T
    | {
        name?: T;
        id?: T;
      };
  image?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  policies?:
    | T
    | {
        checkIn?: T;
        checkOut?: T;
        cancellation?: T;
        pet?: T;
        children?: T;
        payment?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cars_select".
 */
export interface CarsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  slug?: T;
  brand?: T;
  capacity?: T;
  pricing?:
    | T
    | {
        pricePerDayInCity?: T;
        transferAirportHotelAirport?: T;
        transferHotelDinnerHotel?: T;
        longRouteFrom7Days?: T;
      };
  image?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  slug?: T;
  first_name?: T;
  last_name?: T;
  comment?: T;
  rating?: T;
  tour?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * 📄 Manage your website sections
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * Website sections - Fixed structure, edit content only
   */
  sections?:
    | (
        | {
            title: string;
            subtitle: string;
            button?: string | null;
            image: number | Media;
            posts?:
              | {
                  review?: (number | null) | Review;
                  video?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            faqs?:
              | {
                  question: string;
                  answer: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faq';
          }
        | {
            tours?: (number | null) | Tour;
            id?: string | null;
            blockName?: string | null;
            blockType: 'special-offers';
          }
        | {
            tours?: (number | Tour)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'recommended-local-tours';
          }
        | {
            tours?: (number | Tour)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'recommended-abroad-tours';
          }
        | {
            cities?: (number | City)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'recommended-cities';
          }
        | {
            cars?: (number | Car)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'recommended-cars';
          }
      )[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  sections?:
    | T
    | {
        hero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?: T;
              image?: T;
              posts?:
                | T
                | {
                    review?: T;
                    video?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              faqs?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'special-offers'?:
          | T
          | {
              tours?: T;
              id?: T;
              blockName?: T;
            };
        'recommended-local-tours'?:
          | T
          | {
              tours?: T;
              id?: T;
              blockName?: T;
            };
        'recommended-abroad-tours'?:
          | T
          | {
              tours?: T;
              id?: T;
              blockName?: T;
            };
        'recommended-cities'?:
          | T
          | {
              cities?: T;
              id?: T;
              blockName?: T;
            };
        'recommended-cars'?:
          | T
          | {
              cars?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}